{"version":3,"sources":["webpack:///./src/constants/socket.ts","webpack:///./src/components/PageLoading/index.tsx","webpack:///./src/containers/shared/App/index.scss","webpack:///./src/components/Error/index.scss","webpack:///./src/constants/index.ts","webpack:///./src/components/PageLoading/index.scss","webpack:///./src/containers/shared/App/Provider.tsx","webpack:///./src/utils/hooks.ts","webpack:///./src/components/Error/index.tsx","webpack:///./src/utils/index.ts","webpack:///./node_modules/moment/locale sync [\\/\\\\](es-us(\\.js)","webpack:///./src/locales/loader.ts","webpack:///./src/containers/shared/App/IntlWrapper.tsx","webpack:///./src/containers/shared/App/index.tsx","webpack:///./src/sw.ts","webpack:///./src/index.tsx","webpack:///./src/store/authStore/syncUserInfo.ts","webpack:///./src/services/http.ts","webpack:///./src/services/api/auth.ts","webpack:///./src/services/api/user.ts","webpack:///./src/services/api/report.ts","webpack:///./src/utils/reactExt.tsx","webpack:///./src/store/socketStore/index.ts","webpack:///./src/store/globalStore/index.ts","webpack:///./src/store/authStore/index.ts","webpack:///./src/store/userStore/index.ts","webpack:///./src/store/reportStore/index.ts","webpack:///./src/store/index.ts"],"names":["SOCKET_TYPE","DATA_FORMAT_TYPE","SOCKER_TYPES","SOCKETIO","WEBSOCKET","DATA_FORMATS","JSON","TEXT","PageLoading","className","styles","pageLoading","spin","module","exports","COOKIE_KEYS","LOCALSTORAGE_KEYS","GITHUB_LINK","RootContext","createContext","RootConsumer","children","store","Provider","value","useOnMount","onMount","React","useEffect","Error","centered","emoji","title","setCookie","name","expiredays","exdate","Date","setDate","getDate","document","cookie","escape","toUTCString","queryArray","array","key","keyAlias","Array","item","filter","a","length","arrayToTree","id","pid","data","cloneDeep","result","hash","forEach","_","index","hashVP","push","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","code","keys","Object","resolve","LOCALES_KEYS","SUPPOER_LOCALES","EN_US","ZH_CN","IntlWrapper","useState","currentLocale","setCurrentLocale","antdLocaleData","setAntdLocaleData","targetLocale","intl","determineLocale","cookieLocaleKey","LANG","find","locale","Promise","async","then","m","default","loc","antdLoc","localeData","getLocaleLoader","res","init","locales","selectLanguage","intlSelect","onChange","val","location","reload","l","Option","Fragment","hashHistory","createHashHistory","history","syncHistoryWithStore","loadableOptions","fallback","Home","loadable","Login","AppWrapper","appWrapper","App","exact","path","component","navigator","window","addEventListener","serviceWorker","register","registration","console","log","catch","registrationError","configure","enforceActions","Component","ReactDOM","render","getElementById","localUserInfo","HTTPERROR","initialUserInfo","localStorage","getItem","USERINFO","parse","userInfo","syncUserInfo","TOKENERROR","DEFAULTCONFIG","baseURL","process","http","authTimer","v","url","baseUrl","axiosConfig","method","headers","Authorization","token","instance","axios","create","interceptors","request","use","cfg","params","ts","now","error","reject","response","rdata","isNaN","errCode","isSuccess","resFormat","msg","type","LOGICERROR","config","includes","status","destroy","clearTimeout","setTimeout","replace","statusText","message","test","TIMEOUTERROR","NETWORKERROR","FormData","startTime","err","stack","login","post","getUsers","get","createUser","modifyUser","deleteUser","getDaily","getVarietyList","getContractList","setMainContract","getBillboardList","StoreExt","api","$message","$notification","this","socketType","observable","DATA_FORMAT","NOT_SUPPORT_POLLING","computed","action","dataFormat","socketIsConnected","messages","time","getTime","notSupportPolling","setItem","String","SIDE_BAR_COLLAPSED","SIDE_BAR_THEME","NAV_OPEN_KEYS","sideBarCollapsed","theme","sideBarTheme","openKeys","navOpenKeys","stringify","constructor","super","logout","setUserInfo","removeItem","routerStore","reaction","auth","isPlainObject","user","_id","handleTableChange","pagination","current","pageSize","pageIndex","changePageIndex","changePageSize","getUsersloading","runInAction","users","total","varietyList","x","variety","varietyCN","contractList","contract","toJS","billboardList","billboardPrice","getDailyloading","report","marketes","markets","start","end","billboardStart","billboardEnd","position","price","exchange","isMain","contractTotal","getMainContract","currentExchange","currentVariety","RouterStore"],"mappings":"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","file":"static/js/app.8.08c49fbbbf82f3b1ddf7.js","sourcesContent":["export enum SOCKET_TYPE {\n    SOCKETIO = 'socket.io',\n    WEBSOCKET = 'websocket'\n}\nexport const SOCKER_TYPES: SOCKET_TYPE[] = [SOCKET_TYPE.SOCKETIO, SOCKET_TYPE.WEBSOCKET]\n\nexport enum DATA_FORMAT_TYPE {\n    JSON = 'json',\n    TEXT = 'text'\n}\nexport const DATA_FORMATS: DATA_FORMAT_TYPE[] = [DATA_FORMAT_TYPE.JSON, DATA_FORMAT_TYPE.TEXT]\n","import React from 'react'\nimport { Spin } from 'antd'\n\nimport styles from './index.scss'\n\nfunction PageLoading() {\n    return (\n        <div className={styles.pageLoading}>\n            <Spin className={styles.spin} />\n        </div>\n    )\n}\n\nexport default PageLoading\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"appWrapper--1wH_tXYu\",\"intlSelect\":\"intlSelect--2an2MIkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"centered\":\"centered--2jPzzRFL\",\"emoji\":\"emoji--3gU-a8nl\",\"title\":\"title--sRRm2SCk\"};","export enum COOKIE_KEYS {\n    LANG = 'lang'\n}\n\nexport enum LOCALSTORAGE_KEYS {\n    USERINFO = 'userInfo',\n    NAV_OPEN_KEYS = 'navOpenKeys',\n    SIDE_BAR_THEME = 'sideBarTheme',\n    SIDE_BAR_COLLAPSED = 'sideBarCollapsed',\n    // about socket\n    SOCKET_URL = 'socketUrl',\n    SOCKET_TYPE = 'socketType',\n    SOCKET_IO_EVENTS = 'socketIOEvents',\n    DATA_FORMAT = 'dataFormat',\n    NOT_SUPPORT_POLLING = 'notSupportPolling'\n}\n\nexport const LOGIN_CATEGORY = ['user', 'admin']\n\nexport const GITHUB_LINK = 'https://github.com/YDJ-FE'\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageLoading\":\"pageLoading--2iiIbUPc\",\"spin\":\"spin--1tVIF68w\"};","import React, { createContext, ReactElement } from 'react'\nimport { Observer } from 'mobx-react'\n\nimport * as store from '@store/index'\n\ninterface ChildrenProps<T> {\n    children: (value: T) => ReactElement<any>\n}\n\nexport const RootContext = createContext<IStore>(null)\n\n/**\n * 已包含Observer\n * @param param0\n */\nexport const RootConsumer = ({ children }: ChildrenProps<IStore>) => <Observer>{() => children(store)}</Observer>\n\nexport default function Provider({ children }: { children?: React.ReactNode }) {\n    return <RootContext.Provider value={{ ...store }}>{children}</RootContext.Provider>\n}\n","import React from 'react'\n\n/**\n * componentDidMount in hook way\n *\n * @export\n * @param {() => any} onMount\n * @returns\n */\nexport function useOnMount(onMount: () => any) {\n    return React.useEffect(() => {\n        if (onMount) {\n            onMount()\n        }\n    }, [])\n}\n\n/**\n * componentWillUnmount in hook way\n *\n * @export\n * @param {() => any} onUnmount\n * @returns\n */\nexport function useOnUnmount(onUnmount: () => any) {\n    return React.useEffect(() => {\n        return () => onUnmount && onUnmount()\n    }, [])\n}\n","import React from 'react'\n\nimport styles from './index.scss'\n\nconst Error = () => (\n    <div className={styles.centered}>\n        <div className={styles.emoji}>😭</div>\n        <p className={styles.title}>Ooooops!</p>\n        <p>This page does not exist anymore.</p>\n    </div>\n)\n\nexport default Error\n","import { cloneDeep } from 'lodash'\n\n/**\n * setCookie\n *\n * @export\n * @param {string} name\n * @param {string} value\n * @param {number} [expiredays=365]\n */\nexport function setCookie(name: string, value: string, expiredays = 365) {\n    const exdate = new Date()\n    exdate.setDate(exdate.getDate() + expiredays)\n    document.cookie = `${name}=${escape(value)};expires=${exdate.toUTCString()}`\n}\n\n/**\n * getCookie\n *\n * @export\n * @param {string} name\n * @returns\n */\nexport function getCookie(name: string) {\n    if (document.cookie.length > 0) {\n        let cStart = document.cookie.indexOf(name + '=')\n        if (cStart !== -1) {\n            cStart = cStart + name.length + 1\n            let cEnd = document.cookie.indexOf(';', cStart)\n            if (cEnd === -1) {\n                cEnd = document.cookie.length\n            }\n            return unescape(document.cookie.substring(cStart, cEnd))\n        }\n    }\n    return ''\n}\n\n/**\n * clearCookie\n *\n * @export\n * @param {string} name\n */\nexport function clearCookie(name: string) {\n    setCookie(name, '')\n}\n\n/**\n * 从url获取参数\n *\n * @export\n * @param {string} name\n * @returns {string}\n */\nexport function queryURL(name: string): string {\n    const reg = new RegExp(`(^|&)${name}=([^&]*)(&|$)`, 'i')\n    const result = window.location.search.substr(1).match(reg)\n    if (result !== null) {\n        return decodeURI(result[2])\n    }\n    return null\n}\n\n/**\n * 数组查询\n *\n * @export\n * @template T\n * @param {any[]} array\n * @param {string} key\n * @param {string} [keyAlias='key']\n * @returns {T}\n */\nexport function queryArray<T>(array: any[], key: string, keyAlias = 'key'): T {\n    if (!(array instanceof Array)) {\n        return null\n    }\n    const item = array.filter(a => a[keyAlias] === key)\n    if (item.length) {\n        return item[0]\n    }\n    return null\n}\n\n/**\n * 数组格式转树状结构\n *\n * @export\n * @template T\n * @param {any[]} array\n * @param {string} [id='id']\n * @param {string} [pid='pid']\n * @param {string} [children='children']\n * @returns {T[]}\n */\nexport function arrayToTree<T>(array: any[], id = 'id', pid = 'pid', children = 'children'): T[] {\n    const data = cloneDeep(array)\n    const result = []\n    const hash = {}\n    data.forEach((_, index) => {\n        hash[data[index][id]] = data[index]\n    })\n    data.forEach(item => {\n        const hashVP = hash[item[pid]]\n        if (hashVP) {\n            if (!hashVP[children]) {\n                hashVP[children] = []\n            }\n            hashVP[children].push(item)\n        } else {\n            result.push(item)\n        }\n    })\n    return result\n}\n","var map = {\n\t\"./es-us\": 242,\n\t\"./es-us.js\": 242,\n\t\"./zh-cn\": 243,\n\t\"./zh-cn.js\": 243\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 387;","import { Locale } from 'antd/lib/locale-provider'\n\nexport enum LOCALES_KEYS {\n    EN_US = 'en-US',\n    ZH_CN = 'zh-CN'\n}\n\nexport const SUPPOER_LOCALES = [\n    {\n        name: 'English',\n        value: LOCALES_KEYS.EN_US\n    },\n    {\n        name: '简体中文',\n        value: LOCALES_KEYS.ZH_CN\n    }\n]\n\nexport interface LocaleResponse {\n    localeData: StringObject\n    antdLocaleData: Locale\n}\n\nexport function getLocaleLoader(locale: string): Promise<LocaleResponse> {\n    switch (locale) {\n        case LOCALES_KEYS.ZH_CN:\n            return new Promise(async resolve => {\n                const loc = await import(/* webpackChunkName: \"zh-CN\" */ './zh_CN.json').then(m => m.default)\n                const antdLoc = await import(\n                    /* webpackChunkName: \"antd-zh-CN\" */ 'antd/lib/locale-provider/zh_CN'\n                ).then(m => m.default)\n                resolve({ localeData: loc, antdLocaleData: antdLoc })\n            })\n        default:\n            return new Promise(async resolve => {\n                const loc = await import(/* webpackChunkName: \"en-US\" */ './en_US.json').then(m => m.default)\n                const antdLoc = await import(\n                    /* webpackChunkName: \"antd-en-US\" */ 'antd/lib/locale-provider/en_US'\n                ).then(m => m.default)\n                resolve({ localeData: loc, antdLocaleData: antdLoc })\n            })\n    }\n}\n","import React from 'react'\nimport intl from 'react-intl-universal'\nimport { find } from 'lodash'\nimport { Select, ConfigProvider } from 'antd'\nimport { Locale } from 'antd/lib/locale-provider'\n\nimport styles from './index.scss'\nimport { useOnMount } from '@utils/hooks'\nimport { setCookie } from '@utils/index'\nimport { COOKIE_KEYS } from '@constants/index'\nimport PageLoading from '@components/PageLoading'\nimport { SUPPOER_LOCALES, LOCALES_KEYS, getLocaleLoader } from '@locales/loader'\n\ninterface IProps {\n    children?: React.ReactNode\n}\n\nexport default function IntlWrapper({ children }: IProps) {\n    const [currentLocale, setCurrentLocale] = React.useState('')\n    const [antdLocaleData, setAntdLocaleData] = React.useState<Locale>(null)\n\n    function loadLocales() {\n        let targetLocale = intl.determineLocale({ cookieLocaleKey: COOKIE_KEYS.LANG }) as LOCALES_KEYS\n        // default is English\n        if (!find(SUPPOER_LOCALES, { value: targetLocale })) {\n            targetLocale = LOCALES_KEYS.EN_US\n        }\n        getLocaleLoader(targetLocale).then(res => {\n            intl.init({ currentLocale: targetLocale, locales: { [targetLocale]: res.localeData } }).then(() => {\n                setCurrentLocale(targetLocale)\n                setAntdLocaleData(res.antdLocaleData)\n            })\n        })\n    }\n\n    function onSelectLocale(val: string) {\n        setCookie(COOKIE_KEYS.LANG, val)\n        location.reload()\n    }\n\n    useOnMount(loadLocales)\n\n    if (!currentLocale) {\n        return <PageLoading />\n    }\n    const selectLanguage = (\n        <Select className={styles.intlSelect} onChange={onSelectLocale} value={currentLocale}>\n            {SUPPOER_LOCALES.map(l => (\n                <Select.Option key={l.value} value={l.value}>\n                    {l.name}\n                </Select.Option>\n            ))}\n        </Select>\n    )\n    return (\n        <ConfigProvider locale={antdLocaleData}>\n            <React.Fragment>\n                {selectLanguage}\n                {children}\n            </React.Fragment>\n        </ConfigProvider>\n    )\n}\n","import React from 'react'\nimport loadable from '@loadable/component'\nimport { HashRouter, Router, Switch, Route } from 'react-router-dom'\nimport { createHashHistory } from 'history'\nimport { syncHistoryWithStore } from 'mobx-react-router'\n\nimport styles from './index.scss'\nimport * as store from '@store/index'\nimport PageLoading from '@components/PageLoading'\nimport Error from '@components/Error'\nimport Provider from './Provider'\nimport IntlWrapper from './IntlWrapper'\n\nconst hashHistory = createHashHistory()\nconst history = syncHistoryWithStore(hashHistory, store.routerStore)\n\nconst loadableOptions = { fallback: <PageLoading /> }\nconst Home = loadable(() => import(/* webpackChunkName: \"home\" */ '@views/Home'), loadableOptions)\nconst Login = loadable(() => import(/* webpackChunkName: \"login\" */ '@views/Login'), loadableOptions)\n\nconst AppWrapper = ({ children }: { children?: React.ReactNode }) => <div className={styles.appWrapper}>{children}</div>\n\nfunction App() {\n    return (\n        <Provider>\n            <IntlWrapper>\n                <AppWrapper>\n                    <Router history={history}>\n                        <HashRouter>\n                            <Switch>\n                                <Route exact path=\"/login\" component={Login} />\n                                <Route path=\"/\" component={Home} />\n                                <Route component={Error} />\n                            </Switch>\n                        </HashRouter>\n                    </Router>\n                </AppWrapper>\n            </IntlWrapper>\n        </Provider>\n    )\n}\n\nexport default App\n","export default function registerServiceWorker() {\n    if ('serviceWorker' in navigator && process.env.APP_ENV !== 'dev') {\n        window.addEventListener('load', () => {\n            const { serviceWorker } = navigator\n            serviceWorker\n                .register('/service-worker.js')\n                .then(registration => {\n                    console.log('SW registered: ', registration)\n                })\n                .catch(registrationError => {\n                    console.log('SW registration failed: ', registrationError)\n                })\n        })\n    }\n}\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { configure } from 'mobx'\n\nimport registerServiceWorker from './sw'\nimport App from '@shared/App'\n\nregisterServiceWorker()\nconfigure({ enforceActions: 'observed' })\n\nconst render = (Component: React.ComponentType) => {\n    ReactDOM.render(<Component />, document.getElementById('app'))\n}\n\nrender(App)\n","import { LOCALSTORAGE_KEYS } from '@constants/index'\n\nexport const initialUserInfo = (() => {\n    const localUserInfo = localStorage.getItem(LOCALSTORAGE_KEYS.USERINFO)\n    const _userInfo: IAuthStore.UserInfo = localUserInfo ? JSON.parse(localUserInfo) : {}\n    return _userInfo\n})()\n\nexport let userInfo: IAuthStore.UserInfo = initialUserInfo\n\n/**\n * syncUserInfo for http\n *\n * @export\n * @param {IAuthStore.UserInfo} data\n */\nexport function syncUserInfo(data: IAuthStore.UserInfo) {\n    userInfo = data\n}\n","import axios, { AxiosRequestConfig as _AxiosRequestConfig, Method } from 'axios'\nimport qs from 'qs'\nimport { message } from 'antd'\n\nimport { userInfo } from '@store/authStore/syncUserInfo'\n\nexport interface AxiosRequestConfig extends _AxiosRequestConfig {\n    startTime?: Date\n}\n\nexport interface HttpResquest {\n    get?(url: string, data: object, baseUrl?: string): Promise<any>\n    post?(url: string, data: object, baseUrl?: string): Promise<any>\n    delete?(url: string, data: object, baseUrl?: string): Promise<any>\n    put?(url: string, data: object, baseUrl?: string): Promise<any>\n}\n\nenum HTTPERROR {\n    LOGICERROR,\n    TIMEOUTERROR,\n    NETWORKERROR\n}\n\nconst TOKENERROR = [401, 402, 403]\n\nconst DEFAULTCONFIG = {\n    baseURL: process.env.BASEURL\n}\n\nconst http: HttpResquest = {}\nconst methods: Method[] = ['get', 'post', 'put', 'delete']\n\nlet authTimer: NodeJS.Timer = null\n\nconst isSuccess = res => res.result.errCode === 0\nconst resFormat = res => res.response || res.data || {}\n\nmethods.forEach(v => {\n    http[v] = (url: string, data: object, baseUrl?: string) => {\n        const axiosConfig: AxiosRequestConfig = {\n            method: v,\n            url,\n            baseURL: baseUrl || DEFAULTCONFIG.baseURL,\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        }\n        const instance = axios.create(DEFAULTCONFIG)\n        // Add a request interceptor\n        instance.interceptors.request.use(\n            cfg => {\n                cfg.params = { ...cfg.params, ts: Date.now() / 1000 }\n                return cfg\n            },\n            error => Promise.reject(error)\n        )\n        // Add a response interceptor\n        instance.interceptors.response.use(\n            response => {\n                const rdata =\n                    typeof response.data === 'object' && !isNaN(response.data.length) ? response.data[0] : response.data\n                if (!isSuccess(rdata)) {\n                    return Promise.reject({\n                        msg: rdata.result.msg,\n                        errCode: rdata.result.errCode,\n                        type: HTTPERROR[HTTPERROR.LOGICERROR],\n                        config: response.config\n                    })\n                }\n                return resFormat(rdata)\n            },\n            error => {\n                if (TOKENERROR.includes(error.response.status)) {\n                    message.destroy()\n                    message.error('Authentication failure, Please relogin!')\n                    clearTimeout(authTimer)\n                    authTimer = setTimeout(() => {\n                        location.replace('/#/login')\n                    }, 300)\n                    return\n                }\n                return Promise.reject({\n                    msg: error.response.statusText || error.message || 'network error',\n                    type: /^timeout of/.test(error.message)\n                        ? HTTPERROR[HTTPERROR.TIMEOUTERROR]\n                        : HTTPERROR[HTTPERROR.NETWORKERROR],\n                    config: error.config\n                })\n            }\n        )\n        if (v === 'get') {\n            axiosConfig.params = data\n        } else if (data instanceof FormData) {\n            axiosConfig.data = data\n        } else {\n            axiosConfig.data = data\n        }\n        axiosConfig.startTime = new Date()\n        return instance\n            .request(axiosConfig)\n            .then(res => res)\n            .catch(err => {\n                message.destroy()\n                message.error(err.response || err.msg || err.stack || 'unknown error')\n                return Promise.reject(\n                    axiosConfig.url.includes('autoScript.set') ? { err } : { err, stack: err.msg || err.stack || '' }\n                )\n            })\n    }\n})\n\nexport default http\n","import http from '@services/http'\n\nexport default {\n    login(data: object): Promise<any> {\n        console.log('==>>001:', data)\n        return http.post('auth/login', data || {})\n    }\n}\n","import http from '@services/http'\n\nexport default {\n    getUsers(data: object): Promise<any> {\n        return http.get('user', data || {})\n    },\n\n    createUser(data: object): Promise<any> {\n        return http.post('user/create', data || {})\n    },\n\n    modifyUser(data: object): Promise<any> {\n        return http.post('user/modify', data || {})\n    },\n\n    deleteUser(data: object): Promise<any> {\n        return http.post('user/delete', data || {})\n    }\n}\n","import http from '@services/http'\n\nexport default {\n    getDaily(data: object): Promise<any> {\n        return http.post('report/daily', data || {})\n    },\n    getVarietyList(data: object): Promise<any> {\n        return http.post('variety/list', data || {})\n    },\n    getContractList(data: object): Promise<any> {\n        return http.post('contract/list', data || {})\n    },\n    setMainContract(data: object): Promise<any> {\n        return http.post('contract/setMain', data || {})\n    },\n    getBillboardList(data: object): Promise<any> {\n        return http.post('report/billboard', data || {})\n    }\n}\n","import React from 'react'\nimport { message, notification } from 'antd'\n\nimport * as api from '@services/api'\n\n/**\n * extends component\n *\n * @export\n * @class ComponentExt\n * @extends {React.Component<P, S>}\n * @template P\n * @template S\n */\nexport class ComponentExt<P = {}, S = {}> extends React.Component<P, S> {\n    readonly api = api\n    readonly $message = message\n    readonly $notification = notification\n}\n\n/**\n * extends store\n *\n * @export\n * @class StoreExt\n */\nexport class StoreExt {\n    readonly api = api\n    readonly $message = message\n    readonly $notification = notification\n}\n","import { observable, action, computed } from 'mobx'\n\nimport { StoreExt } from '@utils/reactExt'\nimport { LOCALSTORAGE_KEYS } from '@constants/index'\nimport { SOCKER_TYPES, DATA_FORMATS } from '@constants/socket'\n\n/**\n * socket debugger store\n *\n * @export\n * @class SocketStore\n * @extends {StoreExt}\n */\nexport class SocketStore extends StoreExt {\n    @observable\n    socketType: ISocketStore.SocketType =\n        (localStorage.getItem(LOCALSTORAGE_KEYS.SOCKET_TYPE) as ISocketStore.SocketType) || SOCKER_TYPES[0]\n    @observable\n    dataFormat: ISocketStore.DataFormatType =\n        (localStorage.getItem(LOCALSTORAGE_KEYS.DATA_FORMAT) as ISocketStore.DataFormatType) || DATA_FORMATS[0]\n    @observable\n    socketIsConnected = false\n    @observable\n    messages: ISocketStore.Message[] = []\n    @observable\n    notSupportPolling: boolean = localStorage.getItem(LOCALSTORAGE_KEYS.NOT_SUPPORT_POLLING) === 'true'\n\n    @computed\n    get isSocketIO() {\n        return this.socketType === SOCKER_TYPES[0]\n    }\n\n    @action\n    setSocketType = (type: ISocketStore.SocketType) => {\n        this.socketType = type\n    }\n\n    @action\n    setDataFormat = (dataFormat: ISocketStore.DataFormatType) => {\n        this.dataFormat = dataFormat\n    }\n\n    @action\n    setSocketIsConnected = (socketIsConnected: boolean) => {\n        this.socketIsConnected = socketIsConnected\n    }\n\n    @action\n    clearMessages = () => {\n        this.messages = []\n    }\n\n    @action\n    addMessage = (message: ISocketStore.Message) => {\n        if (!message.time) {\n            message.time = new Date().getTime()\n        }\n        this.messages.push(message)\n    }\n\n    @action\n    setNotSupportPolling = (val: boolean) => {\n        this.notSupportPolling = val\n        localStorage.setItem(LOCALSTORAGE_KEYS.NOT_SUPPORT_POLLING, String(val))\n    }\n}\n\nexport default new SocketStore()\n","import { observable, action } from 'mobx'\n\nimport { StoreExt } from '@utils/reactExt'\nimport { LOCALSTORAGE_KEYS } from '@constants/index'\n\nexport class GlobalStore extends StoreExt {\n    /**\n     * 菜单栏折叠\n     *\n     * @type {boolean}\n     * @memberof GlobalStore\n     */\n    @observable\n    sideBarCollapsed: boolean = localStorage.getItem(LOCALSTORAGE_KEYS.SIDE_BAR_COLLAPSED) === '1'\n    /**\n     * 菜单栏主题\n     *\n     * @type {IGlobalStore.SideBarTheme}\n     * @memberof GlobalStore\n     */\n    @observable\n    sideBarTheme: IGlobalStore.SideBarTheme =\n        (localStorage.getItem(LOCALSTORAGE_KEYS.SIDE_BAR_THEME) as IGlobalStore.SideBarTheme) || 'light'\n    /**\n     * 打开的菜单key\n     *\n     * @type {string[]}\n     * @memberof GlobalStore\n     */\n    @observable\n    navOpenKeys: string[] = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEYS.NAV_OPEN_KEYS)) || []\n\n    @action\n    toggleSideBarCollapsed = () => {\n        this.sideBarCollapsed = !this.sideBarCollapsed\n        localStorage.setItem(LOCALSTORAGE_KEYS.SIDE_BAR_COLLAPSED, this.sideBarCollapsed ? '1' : '0')\n    }\n\n    @action\n    changeSiderTheme = (theme: IGlobalStore.SideBarTheme) => {\n        this.sideBarTheme = theme\n        localStorage.setItem(LOCALSTORAGE_KEYS.SIDE_BAR_THEME, theme)\n    }\n\n    @action\n    setOpenKeys = (openKeys: string[]) => {\n        this.navOpenKeys = openKeys\n        localStorage.setItem(LOCALSTORAGE_KEYS.NAV_OPEN_KEYS, JSON.stringify(openKeys))\n    }\n}\n\nexport default new GlobalStore()\n","import { observable, action, reaction } from 'mobx'\nimport { isPlainObject } from 'lodash'\n\nimport { StoreExt } from '@utils/reactExt'\nimport { routerStore } from './../'\nimport { initialUserInfo, syncUserInfo } from './syncUserInfo'\nimport { LOCALSTORAGE_KEYS } from '@constants/index'\n\nexport class AuthStore extends StoreExt {\n    /**\n     * 用户信息\n     *\n     * @type {IAuthStore.UserInfo}\n     * @memberof AuthStore\n     */\n    @observable\n    userInfo: IAuthStore.UserInfo = initialUserInfo\n\n    constructor() {\n        super()\n        reaction(() => this.userInfo, syncUserInfo)\n    }\n\n    @action\n    login = async (params: IAuthStore.LoginParams): Promise<any> => {\n        try {\n            const res = await this.api.auth.login(params)\n            this.setUserInfo(isPlainObject(res) ? res : {})\n            localStorage.setItem(LOCALSTORAGE_KEYS.USERINFO, JSON.stringify(res))\n            routerStore.replace('/')\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    logout = () => {\n        this.setUserInfo({})\n        localStorage.removeItem(LOCALSTORAGE_KEYS.USERINFO)\n        routerStore.replace('/login')\n    }\n\n    /**\n     * 初始化用户信息\n     *\n     * @memberof AuthStore\n     */\n    @action\n    setUserInfo = (userInfo: IAuthStore.UserInfo): IAuthStore.UserInfo => {\n        this.userInfo = userInfo\n        return userInfo\n    }\n}\n\nexport default new AuthStore()\n","import { observable, action, runInAction } from 'mobx'\nimport { PaginationConfig } from 'antd/lib/pagination'\n\nimport { StoreExt } from '@utils/reactExt'\n\nexport class UserStore extends StoreExt {\n    /**\n     * 加载用户列表时的loading\n     *\n     * @memberof UserStore\n     */\n    @observable\n    getUsersloading = false\n    /**\n     * 用户列表\n     *\n     * @type {IUserStore.IUser[]}\n     * @memberof UserStore\n     */\n    @observable\n    users: IUserStore.IUser[] = []\n    /**\n     * table pageIndex\n     *\n     * @memberof UserStore\n     */\n    @observable\n    pageIndex = 1\n    /**\n     * table pageSize\n     *\n     * @memberof UserStore\n     */\n    @observable\n    pageSize = 30\n    /**\n     * users total\n     *\n     * @memberof UserStore\n     */\n    @observable\n    total = 0\n\n    /**\n     * 加载用户列表\n     *\n     * @memberof UserStore\n     */\n    @action\n    getUsers = async () => {\n        this.getUsersloading = true\n        try {\n            const res = await this.api.user.getUsers({ pageIndex: this.pageIndex, pageSize: this.pageSize })\n            runInAction('SET_USER_LIST', () => {\n                this.users = res.users\n                this.total = res.total\n            })\n        } catch (err) {}\n        runInAction('HIDE_USER_LIST_LOADING', () => {\n            this.getUsersloading = false\n        })\n    }\n\n    createUser = async (user: IUserStore.IUser) => {\n        await this.api.user.createUser(user)\n    }\n\n    modifyUser = async (user: IUserStore.IUser) => {\n        await this.api.user.modifyUser(user)\n    }\n\n    deleteUser = async (_id: string) => {\n        await this.api.user.deleteUser({ _id })\n        this.getUsers()\n    }\n\n    @action\n    changePageIndex = (pageIndex: number) => {\n        this.pageIndex = pageIndex\n        this.getUsers()\n    }\n\n    @action\n    changePageSize = (pageSize: number) => {\n        this.pageSize = pageSize\n        this.getUsers()\n    }\n\n    handleTableChange = (pagination: PaginationConfig) => {\n        const { current, pageSize } = pagination\n        if (current !== this.pageIndex) {\n            this.changePageIndex(current)\n        }\n        if (pageSize !== this.pageSize) {\n            this.changePageSize(pageSize)\n        }\n    }\n}\n\nexport default new UserStore()\n","import { observable, action, runInAction, toJS, computed } from 'mobx'\nimport { StoreExt } from '@utils/reactExt'\n\nexport class ReportStore extends StoreExt {\n    /**\n     * 加载用户列表时的loading\n     *\n     * @memberof UserStore\n     */\n    @observable\n    getDailyloading = false\n    /**\n     * table pageIndex\n     *\n     * @memberof UserStore\n     */\n    @observable\n    pageIndex = 1\n    /**\n     * table pageSize\n     *\n     * @memberof UserStore\n     */\n    @observable\n    pageSize = 30\n    /**\n     * 每日行情\n     *\n     * @type {IUserStore.IUser[]}\n     * @memberof UserStore\n     */\n    @observable\n    marketes: IReportStore.IDaily[] = []\n    /**\n     * users total\n     *\n     * @memberof UserStore\n     */\n    @observable total = 0\n    @observable contractTotal = 0\n    @observable currentExchange = ''\n    @observable currentVariety = ''\n    @observable billboardList = []\n    @observable billboardPrice = []\n    @observable varietyList: IReportStore.IVariety[] = []\n    @observable contractList: IReportStore.IContract[] = []\n\n    @action\n    getDaily = async (contract: string) => {\n        this.getDailyloading = true\n        try {\n            const res = await this.api.report.getDaily({\n                name: contract,\n                pageIndex: this.pageIndex,\n                pageSize: this.pageSize\n            })\n            runInAction('SET_DAILY_MARKET', () => {\n                this.marketes = res.markets\n                this.total = res.total\n            })\n        } catch (err) {}\n        runInAction('HIDE_DAILY_MARKET_LOADING', () => {\n            this.getDailyloading = false\n        })\n    }\n    @action\n    getBillboard = async (contract: string, start: number, end: number) => {\n        this.getDailyloading = true\n        try {\n            const res = await this.api.report.getBillboardList({\n                contract: contract,\n                billboardStart: start,\n                billboardEnd: end\n            })\n            runInAction('SET_DAILY_MARKET', () => {\n                this.billboardList = JSON.parse(res.position)\n                this.billboardPrice = JSON.parse(res.price)\n            })\n        } catch (err) {}\n        runInAction('HIDE_DAILY_MARKET_LOADING', () => {\n            this.getDailyloading = false\n        })\n    }\n    @action\n    getVarietyList = async (exchange: string) => {\n        this.getDailyloading = true\n        try {\n            const res = await this.api.report.getVarietyList({ exchange: exchange })\n            runInAction('SET_DAILY_MARKET', () => {\n                this.varietyList = res\n            })\n        } catch (err) {}\n        runInAction('HIDE_DAILY_MARKET_LOADING', () => {\n            this.getDailyloading = false\n        })\n    }\n    @action\n    getContract = async (exchange: string, variety: string) => {\n        this.getDailyloading = true\n        try {\n            const res = await this.api.report.getContractList({ exchange: exchange, variety: variety })\n            runInAction('SET_DAILY_MARKET', () => {\n                this.contractList = res\n            })\n        } catch (err) {}\n        runInAction('HIDE_DAILY_MARKET_LOADING', () => {\n            this.getDailyloading = false\n        })\n    }\n\n    @action\n    getMainContract = async (exchange: string, variety: string, isMain: boolean) => {\n        this.getDailyloading = true\n        try {\n            // console.log('===>>01:', exchange, isMain)\n            const res = await this.api.report.getContractList({\n                variety: variety,\n                exchange: exchange,\n                isMain: isMain\n            })\n            runInAction('SET_DAILY_MARKET', () => {\n                this.contractList = res\n                this.contractTotal = res ? res.length : 0\n                // console.log('===>>02:', res, this.contractTotal)\n            })\n        } catch (err) {}\n        runInAction('HIDE_DAILY_MARKET_LOADING', () => {\n            this.getDailyloading = false\n        })\n    }\n\n    @action\n    setMainContract = async (contract: string, isMain: boolean) => {\n        try {\n            console.log('===>>01:', contract, isMain)\n            await this.api.report.setMainContract({\n                contract: contract,\n                isMain: isMain\n            })\n            this.getMainContract(this.currentExchange, this.currentVariety, isMain)\n        } catch (err) {}\n        runInAction('HIDE_DAILY_MARKET_LOADING', () => {\n            this.getDailyloading = false\n        })\n    }\n    @action\n    changeExchange = (exchange: string) => {\n        console.log('===>>change exchange:', exchange)\n        this.currentExchange = exchange\n    }\n\n    @action\n    changeVariety = (variety: string) => {\n        console.log('===>>change exchange:', variety)\n        this.currentVariety = variety\n    }\n\n    @computed get varietyOptions() {\n        return this.varietyList.map(x => ({ variety: x.variety, varietyCN: x.varietyCN }))\n    }\n    @computed get contractOptions() {\n        return this.contractList.map(x => ({ variety: x.variety, varietyCN: x.varietyCN, contract: x.contract }))\n    }\n    @computed get getBillboardData() {\n        return toJS(this.billboardList)\n    }\n    @computed get getBillboardPrice() {\n        console.log('====>>price:', toJS(this.billboardPrice))\n        return toJS(this.billboardPrice)\n    }\n}\nexport default new ReportStore()\n","import { RouterStore } from 'mobx-react-router'\n\nexport const routerStore = new RouterStore()\n\nexport { default as socketStore } from './socketStore'\nexport { default as globalStore } from './globalStore'\nexport { default as authStore } from './authStore'\nexport { default as userStore } from './userStore'\nexport { default as reportStore } from './reportStore'\n"],"sourceRoot":""}