{"version":3,"sources":["webpack:///./src/store/useRootStore.ts","webpack:///./src/containers/views/Home/Sider/index.scss","webpack:///./src/containers/views/Home/index.scss","webpack:///./src/containers/views/Home/Header/index.scss","webpack:///./src/containers/views/Home/menu.tsx","webpack:///./src/containers/views/Home/Header/index.tsx","webpack:///./src/containers/views/Home/Sider/Menu.tsx","webpack:///./src/containers/views/Home/Sider/index.tsx","webpack:///./src/containers/views/Home/index.tsx"],"names":["useRootStore","useContext","RootContext","module","exports","loadComponent","loader","Loadable","fallback","PageLoading","asynchronousComponents","SocketDebugger","Users","Daily","Line","Main","Billboard","Position","Hint","menu","id","path","title","icon","component","exact","observer","globalStore","authStore","Header","className","styles","header","trigger","type","sideBarCollapsed","onClick","toggleSideBarCollapsed","right","rightIcon","theme","window","open","GITHUB_LINK","logout","SubMenu","SiderMenu","React","Component","levelMap","goto","key","history","this","props","routerStore","selectedMenu","find","item","String","currentRoute","push","onOpenChange","openKeys","navOpenKeys","setOpenKeys","latestOpenKey","includes","latestCloseKey","nextOpenKeys","getAncestorKeys","concat","getPathArray","array","current","result","getPath","pid","unshift","queryArray","map","getParent","index","hasOwnProperty","call","location","pathname","arrayToTree","render","sideBarTheme","currentMenu","pathToRegexp","exec","selectedKeys","mode","menuProps","Item","to","computed","Wrapper","userInfo","changeSiderTheme","ChangeTheme","classnames","changeTheme","dark","checkedChildren","unCheckedChildren","checked","onChange","val","Sider","sider","collapsible","collapsed","logoBox","Home","Content","content","m","Error"],"mappings":"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","file":"static/js/home.13.173871bd9b4fc53ed07c.js","sourcesContent":["import { useContext } from 'react'\n\nimport { RootContext } from '@shared/App/Provider'\n\nexport default function useRootStore() {\n    return useContext(RootContext)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"sider--2jrd8Yxu\",\"logoBox\":\"logoBox--19BfflfO\",\"dark\":\"dark--3njEfZ25\",\"menu\":\"menu--1BTvKGnH\",\"changeTheme\":\"changeTheme--3eCctAVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"content--1sXmIbh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header--1O0NXzhw\",\"trigger\":\"trigger--1SsP6ZJb\",\"right\":\"right--8OkrjO7o\",\"rightIcon\":\"rightIcon--3QsQOt0K\"};","import React from 'react'\nimport Loadable from '@loadable/component'\n\nimport PageLoading from '@components/PageLoading'\n\nconst loadComponent = (loader: () => Promise<any>) => Loadable(loader, { fallback: <PageLoading /> })\n\nexport const asynchronousComponents = {\n    SocketDebugger: loadComponent(() => import(/* webpackChunkName: \"socket-debugger\" */ '@views/SocketDebugger')),\n    Users: loadComponent(() => import('@views/Users')),\n    Daily: loadComponent(() => import('@views/Report/Daily')),\n    Line: loadComponent(() => import('@views/Report/Line')),\n    Main: loadComponent(() => import('@views/Report/Main')),\n    Billboard: loadComponent(() => import('@views/Report/Billboard')),\n    Position: loadComponent(() => import('@views/Report/Position')),\n    Hint: loadComponent(() => import('@views/Report/Hint'))\n}\n\n// all routers key\nexport type AsynchronousComponentKeys = keyof typeof asynchronousComponents\n\nexport interface IMenu {\n    title: string\n    id: number\n    pid?: number\n    path?: string\n    icon?: string\n    component?: AsynchronousComponentKeys\n    exact?: boolean\n}\n\nexport interface IMenuInTree extends IMenu {\n    children?: IMenuInTree[]\n}\n\nexport const menu: IMenu[] = [\n    {\n        id: 1,\n        path: '/',\n        title: 'SocketDebugger',\n        icon: 'coffee',\n        component: 'SocketDebugger',\n        exact: true\n    },\n    {\n        id: 2,\n        path: '/users',\n        title: 'Users',\n        icon: 'user',\n        component: 'Users',\n        exact: true\n    },\n    {\n        id: 4,\n        path: '/report/daily',\n        title: '每日报表',\n        icon: 'fire',\n        component: 'Daily',\n        exact: true\n    },\n    {\n        id: 5,\n        path: '/report/line',\n        title: '每日折线',\n        icon: 'fire',\n        component: 'Line',\n        exact: true\n    },\n    {\n        id: 6,\n        path: '/report/billboard',\n        title: '龙虎榜',\n        icon: 'fire',\n        component: 'Billboard',\n        exact: true\n    },\n    {\n        id: 7,\n        path: '/report/main',\n        title: '主力合约',\n        icon: 'fire',\n        component: 'Main',\n        exact: true\n    },\n    {\n        id: 8,\n        path: '/users/position',\n        title: '头寸列表',\n        icon: 'fire',\n        component: 'Position',\n        exact: true\n    },\n    {\n        id: 8,\n        path: '/report/hint',\n        title: '合约提示',\n        icon: 'fire',\n        component: 'Hint',\n        exact: true\n    }\n]\n\nexport default menu\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Layout, Icon } from 'antd'\n\nimport styles from './index.scss'\nimport useRootStore from '@store/useRootStore'\nimport { GITHUB_LINK } from '@constants/index'\n\nfunction Header() {\n    const { globalStore, authStore } = useRootStore()\n    return (\n        <Layout.Header className={styles.header}>\n            <Icon\n                className={styles.trigger}\n                type={globalStore.sideBarCollapsed ? 'menu-unfold' : 'menu-fold'}\n                onClick={globalStore.toggleSideBarCollapsed}\n            />\n            <div className={styles.right}>\n                <Icon\n                    className={styles.rightIcon}\n                    type=\"github\"\n                    theme=\"outlined\"\n                    onClick={() => window.open(GITHUB_LINK)}\n                />\n                <Icon className={styles.rightIcon} type=\"logout\" theme=\"outlined\" onClick={authStore.logout} />\n            </div>\n        </Layout.Header>\n    )\n}\n\nexport default observer(Header)\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { computed } from 'mobx'\nimport { Menu, Icon } from 'antd'\nimport { pathToRegexp } from 'path-to-regexp'\nimport { Link } from 'react-router-dom'\n\nimport styles from './index.scss'\nimport { RootConsumer } from '@shared/App/Provider'\nimport { arrayToTree, queryArray } from '@utils/index'\nimport menu, { IMenu, IMenuInTree } from './../menu'\n\nconst { SubMenu } = Menu\n\ninterface IProps {\n    sideBarCollapsed: boolean\n    sideBarTheme: IGlobalStore.SideBarTheme\n    navOpenKeys: string[]\n    setOpenKeys: (openKeys: string[]) => void\n    userInfo: IAuthStore.UserInfo\n    routerStore: RouterStore\n}\n\n@observer\nclass SiderMenu extends React.Component<IProps> {\n    // 打开的菜单层级记录\n    private levelMap: NumberObject = {}\n\n    @computed\n    get currentRoute() {\n        return this.props.routerStore.location.pathname\n    }\n\n    @computed\n    get menuTree() {\n        return arrayToTree<IMenuInTree>(menu, 'id', 'pid')\n    }\n\n    @computed\n    get menuProps() {\n        const { sideBarCollapsed, navOpenKeys } = this.props\n        return !sideBarCollapsed\n            ? {\n                  onOpenChange: this.onOpenChange,\n                  openKeys: navOpenKeys\n              }\n            : {}\n    }\n\n    goto = ({ key }: { key: string }) => {\n        const { history } = this.props.routerStore\n        const selectedMenu = menu.find(item => String(item.id) === key)\n        if (selectedMenu && selectedMenu.path && selectedMenu.path !== this.currentRoute) {\n            history.push(selectedMenu.path)\n        }\n    }\n\n    onOpenChange = (openKeys: string[]): void => {\n        const { navOpenKeys, setOpenKeys } = this.props\n        const latestOpenKey = openKeys.find(key => !navOpenKeys.includes(key))\n        const latestCloseKey = navOpenKeys.find(key => !openKeys.includes(key))\n        let nextOpenKeys = []\n        if (latestOpenKey) {\n            nextOpenKeys = this.getAncestorKeys(latestOpenKey).concat(latestOpenKey)\n        }\n        if (latestCloseKey) {\n            nextOpenKeys = this.getAncestorKeys(latestCloseKey)\n        }\n        setOpenKeys(nextOpenKeys)\n    }\n\n    getPathArray = (array: IMenu[], current: IMenu): string[] => {\n        const result = [String(current.id)]\n        const getPath = (item: IMenu): void => {\n            if (item && item.pid) {\n                result.unshift(String(item.pid))\n                getPath(queryArray(array, String(item.pid), 'id'))\n            }\n        }\n        getPath(current)\n        return result\n    }\n\n    // 保持选中\n    getAncestorKeys = (key: string): string[] => {\n        const map = {}\n        const getParent = index => {\n            const result = [String(this.levelMap[index])]\n            if (this.levelMap[result[0]]) {\n                result.unshift(getParent(result[0])[0])\n            }\n            return result\n        }\n        for (const index in this.levelMap) {\n            if ({}.hasOwnProperty.call(this.levelMap, index)) {\n                map[index] = getParent(index)\n            }\n        }\n        return map[key] || []\n    }\n\n    render() {\n        this.levelMap = {}\n        const { sideBarTheme } = this.props\n        // 寻找选中路由\n        let currentMenu: IMenu = null\n        for (const item of menu) {\n            if (item.path && pathToRegexp(item.path).exec(this.currentRoute)) {\n                currentMenu = item\n                break\n            }\n        }\n        let selectedKeys: string[] = null\n        if (currentMenu) {\n            selectedKeys = this.getPathArray(menu, currentMenu)\n        }\n        if (!selectedKeys) {\n            selectedKeys = ['1']\n        }\n        return (\n            <Menu\n                className={styles.menu}\n                theme={sideBarTheme}\n                mode=\"inline\"\n                selectedKeys={selectedKeys}\n                onClick={this.goto}\n                {...this.menuProps}\n            >\n                <Menu.Item key=\"\">\n                    <Link to={'/'}>\n                        <Icon type=\"coffee\" />\n                        <span>首页</span>\n                    </Link>\n                </Menu.Item>\n                {/* <Menu.Item key=\"/users\">\n                    <Link to={'/users'}>\n                        <Icon type=\"coffee\" />\n                        <span>用户</span>\n                    </Link>\n                </Menu.Item> */}\n                <SubMenu\n                    key=\"/users\"\n                    title={\n                        <span>\n                            <Icon type=\"coffee\" />\n                            <span className=\"nav-text\">用户</span>\n                        </span>\n                    }\n                >\n                    <Menu.Item key=\"/users/position\">\n                        <Link to={'/users/position'}>\n                            <Icon type=\"fire\" />\n                            头寸列表\n                        </Link>\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu\n                    key=\"/report\"\n                    title={\n                        <span>\n                            <Icon type=\"calendar\" />\n                            <span className=\"nav-text\">报表</span>\n                        </span>\n                    }\n                >\n                    <Menu.Item key=\"/report/daily\">\n                        <Link to={'/report/daily'}>\n                            <Icon type=\"fire\" />\n                            每日数据\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/report/line\">\n                        <Link to={'/report/line'}>\n                            <Icon type=\"fire\" />\n                            数据折现\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/report/main\">\n                        <Link to={'/report/main'}>\n                            <Icon type=\"fire\" />\n                            主力合约\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/report/billboard\">\n                        <Link to={'/report/billboard'}>\n                            <Icon type=\"fire\" />\n                            趋势图\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/report/hint\">\n                        <Link to={'/report/hint'}>\n                            <Icon type=\"fire\" />\n                            提示\n                        </Link>\n                    </Menu.Item>\n                </SubMenu>\n                <SubMenu\n                    key=\"/accident\"\n                    title={\n                        <span>\n                            <Icon type=\"calendar\" />\n                            <span className=\"nav-text\">事故</span>\n                        </span>\n                    }\n                >\n                    <Menu.Item key=\"/accident/daily\">\n                        <Link to={'/accident/daily'}>\n                            <Icon type=\"fire\" />\n                            每日数据\n                        </Link>\n                    </Menu.Item>\n                    <Menu.Item key=\"/accident/line\">\n                        <Link to={'/accident/line'}>\n                            <Icon type=\"fire\" />\n                            数据折现\n                        </Link>\n                    </Menu.Item>\n                </SubMenu>\n            </Menu>\n        )\n    }\n}\n\nfunction Wrapper() {\n    return (\n        <RootConsumer>\n            {({ routerStore, authStore, globalStore }) => (\n                <SiderMenu\n                    routerStore={routerStore}\n                    userInfo={authStore.userInfo}\n                    sideBarCollapsed={globalStore.sideBarCollapsed}\n                    sideBarTheme={globalStore.sideBarTheme}\n                    navOpenKeys={globalStore.navOpenKeys}\n                    setOpenKeys={globalStore.setOpenKeys}\n                />\n            )}\n        </RootConsumer>\n    )\n}\n\nexport default Wrapper\n","import React from 'react'\nimport classnames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { Layout, Icon, Switch } from 'antd'\n\nimport styles from './index.scss'\nimport useRootStore from '@store/useRootStore'\nimport SiderMenu from './Menu'\n\nfunction Sider() {\n    const { sideBarCollapsed, sideBarTheme, changeSiderTheme } = useRootStore().globalStore\n\n    const ChangeTheme = (\n        <div className={classnames(styles.changeTheme, sideBarTheme === 'dark' && styles.dark)}>\n            Switch Theme\n            <Switch\n                checkedChildren=\"dark\"\n                unCheckedChildren=\"light\"\n                checked={sideBarTheme === 'dark'}\n                onChange={val => changeSiderTheme(val ? 'dark' : 'light')}\n            />\n        </div>\n    )\n    return (\n        <Layout.Sider\n            className={styles.sider}\n            trigger={null}\n            theme={sideBarTheme}\n            collapsible\n            collapsed={sideBarCollapsed}\n        >\n            <div className={classnames(styles.logoBox, sideBarTheme === 'dark' && styles.dark)}>\n                <Icon type=\"ant-design\" />\n            </div>\n            <SiderMenu />\n            {!sideBarCollapsed && ChangeTheme}\n        </Layout.Sider>\n    )\n}\n\nexport default observer(Sider)\n","import React from 'react'\nimport { Layout } from 'antd'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport styles from './index.scss'\nimport Error from '@components/Error'\nimport menu, { asynchronousComponents } from './menu'\nimport Header from './Header'\nimport Sider from './Sider'\n\nfunction Home() {\n    return (\n        <Layout>\n            <Sider />\n            <Layout>\n                <Header />\n                <Layout.Content className={styles.content}>\n                    <Router>\n                        <Switch>\n                            {menu.map(m => {\n                                if (!m.path) {\n                                    return null\n                                }\n                                return (\n                                    <Route\n                                        key={m.id}\n                                        exact={m.exact}\n                                        path={m.path}\n                                        component={m.component ? asynchronousComponents[m.component] : null}\n                                    />\n                                )\n                            })}\n                            <Route component={Error} />\n                        </Switch>\n                    </Router>\n                </Layout.Content>\n            </Layout>\n        </Layout>\n    )\n}\n\nexport default Home\n"],"sourceRoot":""}